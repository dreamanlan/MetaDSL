
// SlkString.cpp - generated by the SLK parser generator 

#include "SlkString.h"

static const char * Nonterminal_name[] ={"0"

,"PROGRAM"
,"STATEMENTS"
,"STATEMENT"
,"OPERATOR_STATEMENT_1"
,"OPERATOR_STATEMENT_2"
,"OPERATOR_STATEMENT_COLON"
,"OPERATOR_STATEMENT_4"
,"OPERATOR_STATEMENT_5"
,"OPERATOR_STATEMENT_6"
,"OPERATOR_STATEMENT_7"
,"OPERATOR_STATEMENT_8"
,"OPERATOR_STATEMENT_9"
,"OPERATOR_STATEMENT_10"
,"OPERATOR_STATEMENT_11"
,"OPERATOR_STATEMENT_12"
,"OPERATOR_STATEMENT_13"
,"OPERATOR_STATEMENT_14"
,"OPERATOR_STATEMENT_DESC_0"
,"OPERATOR_STATEMENT_DESC_1"
,"OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON"
,"OPERATOR_STATEMENT_DESC_2"
,"OPERATOR_STATEMENT_DESC_COLON"
,"OPERATOR_STATEMENT_DESC_3"
,"OPERATOR_STATEMENT_DESC_4"
,"OPERATOR_STATEMENT_DESC_5"
,"OPERATOR_STATEMENT_DESC_6"
,"OPERATOR_STATEMENT_DESC_7"
,"OPERATOR_STATEMENT_DESC_8"
,"OPERATOR_STATEMENT_DESC_9"
,"OPERATOR_STATEMENT_DESC_10"
,"OPERATOR_STATEMENT_DESC_11"
,"OPERATOR_STATEMENT_DESC_12"
,"OPERATOR_STATEMENT_DESC_13"
,"OPERATOR_STATEMENT_DESC_14"
,"OPERATOR_STATEMENT_DESC_15"
,"FUNCTION_STATEMENT"
,"FUNCTION_STATEMENT_DESC"
,"FUNCTION_CALLS"
,"FUNCTION_EX_CALL"
,"FUNCTION_EX_CALL_SPECIAL"
,"NULLABLE_FUNCTION_PARAMS"
,"FUNCTION_PARAMS"
,"PARENTHESIS_PARAMS"
,"MEMBER"
,"STATIC_MEMBER_DESC"
,"MEMBER_DESC"
,"MEMBER_DESC2"
,"MEMBER_DESC3"
,"MEMBER_DESC4"
,"MEMBER_PARAM"
,"MEMBER_PARAM_DETAIL"
,"FUNCTION_ID"
,"SEP"
,"SEP_STATEMENT_*"
,"OP_TOKEN_0_OPERATOR_STATEMENT_1_*"
,"OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON_opt"
,"OP_TOKEN_2_OPERATOR_STATEMENT_2_opt"
,"OP_TOKEN_COLON_OPERATOR_STATEMENT_COLON_opt"
,"OP_TOKEN_3_OPERATOR_STATEMENT_4_*"
,"OP_TOKEN_4_OPERATOR_STATEMENT_5_*"
,"OP_TOKEN_5_OPERATOR_STATEMENT_6_*"
,"OP_TOKEN_6_OPERATOR_STATEMENT_7_*"
,"OP_TOKEN_7_OPERATOR_STATEMENT_8_*"
,"OP_TOKEN_8_OPERATOR_STATEMENT_9_*"
,"OP_TOKEN_9_OPERATOR_STATEMENT_10_*"
,"OP_TOKEN_10_OPERATOR_STATEMENT_11_*"
,"OP_TOKEN_11_OPERATOR_STATEMENT_12_*"
,"OP_TOKEN_12_OPERATOR_STATEMENT_13_*"
,"OP_TOKEN_13_OPERATOR_STATEMENT_14_*"
,"OP_TOKEN_14_OPERATOR_STATEMENT_14_opt"
,"OP_TOKEN_15_FUNCTION_STATEMENT_*"
,"FUNCTION_EX_CALL_*"
,"FUNCTION_EX_CALL_2_*"
,"NULLABLE_FUNCTION_PARAMS_opt"
,"NULLABLE_FUNCTION_PARAMS_2_opt"
,"NULLABLE_FUNCTION_PARAMS_3_opt"
,"NULLABLE_FUNCTION_PARAMS_4_opt"
,"NULLABLE_FUNCTION_PARAMS_5_opt"
,"NULLABLE_FUNCTION_PARAMS_6_opt"
,"NULLABLE_FUNCTION_PARAMS_7_opt"
,"NULLABLE_FUNCTION_PARAMS_8_opt"
,"NULLABLE_FUNCTION_PARAMS_9_opt"
,"NULLABLE_FUNCTION_PARAMS_10_opt"
,"NULLABLE_FUNCTION_PARAMS_11_opt"
,"NULLABLE_FUNCTION_PARAMS_12_opt"
,"NULLABLE_FUNCTION_PARAMS_13_opt"
,"NULLABLE_FUNCTION_PARAMS_14_opt"
,"NULLABLE_FUNCTION_PARAMS_15_opt"
,"NULLABLE_FUNCTION_PARAMS_16_opt"
,"NULLABLE_FUNCTION_PARAMS_17_opt"
};

static const char * Terminal_name[] ={"0"

,"OP_TOKEN_0"
,"OP_TOKEN_1"
,"OP_TOKEN_QUESTION"
,"OP_TOKEN_QUESTION_COLON"
,"OP_TOKEN_2"
,"OP_TOKEN_COLON"
,"OP_TOKEN_3"
,"OP_TOKEN_4"
,"OP_TOKEN_5"
,"OP_TOKEN_6"
,"OP_TOKEN_7"
,"OP_TOKEN_8"
,"OP_TOKEN_9"
,"OP_TOKEN_10"
,"OP_TOKEN_11"
,"OP_TOKEN_12"
,"OP_TOKEN_13"
,"OP_TOKEN_14"
,"OP_TOKEN_15"
,"OP_TOKEN_NULLABLE"
,"("
,")"
,"["
,"]"
,"{"
,"}"
,"SCRIPT_CONTENT"
,"BRACKET_COLON_BEGIN"
,"BRACKET_COLON_END"
,"PARENTHESIS_COLON_BEGIN"
,"PARENTHESIS_COLON_END"
,"ANGLE_BRACKET_COLON_BEGIN"
,"ANGLE_BRACKET_COLON_END"
,"BRACE_PERCENT_BEGIN"
,"BRACE_PERCENT_END"
,"BRACKET_PERCENT_BEGIN"
,"BRACKET_PERCENT_END"
,"PARENTHESIS_PERCENT_BEGIN"
,"PARENTHESIS_PERCENT_END"
,"ANGLE_BRACKET_PERCENT_BEGIN"
,"ANGLE_BRACKET_PERCENT_END"
,"::"
,"."
,"POINTER"
,"PERIOD_STAR"
,"POINTER_STAR"
,"IDENTIFIER"
,"STRING"
,"NUMBER"
,"DOLLAR_STRING"
,","
,";"
,"END_OF_SLK_INPUT"
};

static const char * Action_name[] ={"0"

,"_action_markSeparator"
,"_action_endStatement"
,"_action_pushId"
,"_action_buildOperator"
,"_action_buildFirstTernaryOperator"
,"_action_buildSecondTernaryOperator"
,"_action_beginStatement"
,"_action_addFunction"
,"_action_setFunctionId"
,"_action_buildNullableOperator"
,"_action_markParenthesisParam"
,"_action_buildHighOrderFunction"
,"_action_markBracketParam"
,"_action_markStatement"
,"_action_markExternScript"
,"_action_setExternScript"
,"_action_markBracketColonParam"
,"_action_markParenthesisColonParam"
,"_action_markAngleBracketColonParam"
,"_action_markBracePercentParam"
,"_action_markBracketPercentParam"
,"_action_markParenthesisPercentParam"
,"_action_markAngleBracketPercentParam"
,"_action_markColonColonParam"
,"_action_markPeriodParam"
,"_action_markPointerParam"
,"_action_markPeriodStarParam"
,"_action_markPointerStarParam"
,"_action_pushStr"
,"_action_pushNum"
,"_action_pushDollarStr"
,"_action_pushComma"
,"_action_pushSemiColon"
};

static const char * Production_name[] ={"0"

,"PROGRAM --> STATEMENTS"
,"STATEMENTS --> STATEMENT SEP_STATEMENT_*"
,"STATEMENT --> OPERATOR_STATEMENT_DESC_0 _action_endStatement"
,"OPERATOR_STATEMENT_1 --> OPERATOR_STATEMENT_DESC_1 _action_endStatement"
,"OPERATOR_STATEMENT_2 --> OPERATOR_STATEMENT_DESC_2 _action_endStatement"
,"OPERATOR_STATEMENT_COLON --> OPERATOR_STATEMENT_DESC_COLON _action_endStatement"
,"OPERATOR_STATEMENT_4 --> OPERATOR_STATEMENT_DESC_4 _action_endStatement"
,"OPERATOR_STATEMENT_5 --> OPERATOR_STATEMENT_DESC_5 _action_endStatement"
,"OPERATOR_STATEMENT_6 --> OPERATOR_STATEMENT_DESC_6 _action_endStatement"
,"OPERATOR_STATEMENT_7 --> OPERATOR_STATEMENT_DESC_7 _action_endStatement"
,"OPERATOR_STATEMENT_8 --> OPERATOR_STATEMENT_DESC_8 _action_endStatement"
,"OPERATOR_STATEMENT_9 --> OPERATOR_STATEMENT_DESC_9 _action_endStatement"
,"OPERATOR_STATEMENT_10 --> OPERATOR_STATEMENT_DESC_10 _action_endStatement"
,"OPERATOR_STATEMENT_11 --> OPERATOR_STATEMENT_DESC_11 _action_endStatement"
,"OPERATOR_STATEMENT_12 --> OPERATOR_STATEMENT_DESC_12 _action_endStatement"
,"OPERATOR_STATEMENT_13 --> OPERATOR_STATEMENT_DESC_13 _action_endStatement"
,"OPERATOR_STATEMENT_14 --> OPERATOR_STATEMENT_DESC_14 _action_endStatement"
,"OPERATOR_STATEMENT_DESC_0 --> OPERATOR_STATEMENT_DESC_1 OP_TOKEN_0_OPERATOR_STATEMENT_1_*"
,"OPERATOR_STATEMENT_DESC_1 --> OPERATOR_STATEMENT_DESC_2 OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON_opt"
,"OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON --> OP_TOKEN_1 _action_pushId _action_buildOperator OPERATOR_STATEMENT_1"
,"OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON --> OP_TOKEN_QUESTION _action_pushId _action_buildFirstTernaryOperator OPERATOR_STATEMENT_1 OP_TOKEN_QUESTION_COLON _action_pushId _action_buildSecondTernaryOperator OPERATOR_STATEMENT_1"
,"OPERATOR_STATEMENT_DESC_2 --> OPERATOR_STATEMENT_DESC_COLON OP_TOKEN_2_OPERATOR_STATEMENT_2_opt"
,"OPERATOR_STATEMENT_DESC_COLON --> OPERATOR_STATEMENT_DESC_3 OP_TOKEN_COLON_OPERATOR_STATEMENT_COLON_opt"
,"OPERATOR_STATEMENT_DESC_3 --> OPERATOR_STATEMENT_DESC_4 OP_TOKEN_3_OPERATOR_STATEMENT_4_*"
,"OPERATOR_STATEMENT_DESC_4 --> OPERATOR_STATEMENT_DESC_5 OP_TOKEN_4_OPERATOR_STATEMENT_5_*"
,"OPERATOR_STATEMENT_DESC_5 --> OPERATOR_STATEMENT_DESC_6 OP_TOKEN_5_OPERATOR_STATEMENT_6_*"
,"OPERATOR_STATEMENT_DESC_6 --> OPERATOR_STATEMENT_DESC_7 OP_TOKEN_6_OPERATOR_STATEMENT_7_*"
,"OPERATOR_STATEMENT_DESC_7 --> OPERATOR_STATEMENT_DESC_8 OP_TOKEN_7_OPERATOR_STATEMENT_8_*"
,"OPERATOR_STATEMENT_DESC_8 --> OPERATOR_STATEMENT_DESC_9 OP_TOKEN_8_OPERATOR_STATEMENT_9_*"
,"OPERATOR_STATEMENT_DESC_9 --> OPERATOR_STATEMENT_DESC_10 OP_TOKEN_9_OPERATOR_STATEMENT_10_*"
,"OPERATOR_STATEMENT_DESC_10 --> OPERATOR_STATEMENT_DESC_11 OP_TOKEN_10_OPERATOR_STATEMENT_11_*"
,"OPERATOR_STATEMENT_DESC_11 --> OPERATOR_STATEMENT_DESC_12 OP_TOKEN_11_OPERATOR_STATEMENT_12_*"
,"OPERATOR_STATEMENT_DESC_12 --> OPERATOR_STATEMENT_DESC_13 OP_TOKEN_12_OPERATOR_STATEMENT_13_*"
,"OPERATOR_STATEMENT_DESC_13 --> OPERATOR_STATEMENT_DESC_14 OP_TOKEN_13_OPERATOR_STATEMENT_14_*"
,"OPERATOR_STATEMENT_DESC_14 --> OPERATOR_STATEMENT_DESC_15 OP_TOKEN_14_OPERATOR_STATEMENT_14_opt"
,"OPERATOR_STATEMENT_DESC_15 --> FUNCTION_STATEMENT_DESC OP_TOKEN_15_FUNCTION_STATEMENT_*"
,"FUNCTION_STATEMENT --> FUNCTION_STATEMENT_DESC _action_endStatement"
,"FUNCTION_STATEMENT_DESC --> _action_beginStatement FUNCTION_CALLS"
,"FUNCTION_CALLS --> FUNCTION_EX_CALL_*"
,"FUNCTION_CALLS --> _action_addFunction FUNCTION_EX_CALL_SPECIAL FUNCTION_EX_CALL_2_*"
,"FUNCTION_EX_CALL --> FUNCTION_ID _action_setFunctionId NULLABLE_FUNCTION_PARAMS_opt"
,"FUNCTION_EX_CALL_SPECIAL --> FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS --> OP_TOKEN_NULLABLE _action_pushId _action_buildNullableOperator FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS --> FUNCTION_PARAMS"
,"FUNCTION_PARAMS --> PARENTHESIS_PARAMS"
,"FUNCTION_PARAMS --> MEMBER"
,"PARENTHESIS_PARAMS --> _action_markParenthesisParam ( STATEMENTS ) NULLABLE_FUNCTION_PARAMS_2_opt"
,"PARENTHESIS_PARAMS --> _action_markBracketParam [ STATEMENTS ] NULLABLE_FUNCTION_PARAMS_3_opt"
,"PARENTHESIS_PARAMS --> _action_markStatement { STATEMENTS } NULLABLE_FUNCTION_PARAMS_4_opt"
,"PARENTHESIS_PARAMS --> _action_markExternScript SCRIPT_CONTENT _action_setExternScript NULLABLE_FUNCTION_PARAMS_5_opt"
,"PARENTHESIS_PARAMS --> _action_markBracketColonParam BRACKET_COLON_BEGIN STATEMENTS BRACKET_COLON_END NULLABLE_FUNCTION_PARAMS_6_opt"
,"PARENTHESIS_PARAMS --> _action_markParenthesisColonParam PARENTHESIS_COLON_BEGIN STATEMENTS PARENTHESIS_COLON_END NULLABLE_FUNCTION_PARAMS_7_opt"
,"PARENTHESIS_PARAMS --> _action_markAngleBracketColonParam ANGLE_BRACKET_COLON_BEGIN STATEMENTS ANGLE_BRACKET_COLON_END NULLABLE_FUNCTION_PARAMS_8_opt"
,"PARENTHESIS_PARAMS --> _action_markBracePercentParam BRACE_PERCENT_BEGIN STATEMENTS BRACE_PERCENT_END NULLABLE_FUNCTION_PARAMS_9_opt"
,"PARENTHESIS_PARAMS --> _action_markBracketPercentParam BRACKET_PERCENT_BEGIN STATEMENTS BRACKET_PERCENT_END NULLABLE_FUNCTION_PARAMS_10_opt"
,"PARENTHESIS_PARAMS --> _action_markParenthesisPercentParam PARENTHESIS_PERCENT_BEGIN STATEMENTS PARENTHESIS_PERCENT_END NULLABLE_FUNCTION_PARAMS_11_opt"
,"PARENTHESIS_PARAMS --> _action_markAngleBracketPercentParam ANGLE_BRACKET_PERCENT_BEGIN STATEMENTS ANGLE_BRACKET_PERCENT_END NULLABLE_FUNCTION_PARAMS_12_opt"
,"MEMBER --> :: STATIC_MEMBER_DESC NULLABLE_FUNCTION_PARAMS_13_opt"
,"MEMBER --> . MEMBER_DESC NULLABLE_FUNCTION_PARAMS_14_opt"
,"MEMBER --> POINTER MEMBER_DESC2 NULLABLE_FUNCTION_PARAMS_15_opt"
,"MEMBER --> PERIOD_STAR MEMBER_DESC3 NULLABLE_FUNCTION_PARAMS_16_opt"
,"MEMBER --> POINTER_STAR MEMBER_DESC4 NULLABLE_FUNCTION_PARAMS_17_opt"
,"STATIC_MEMBER_DESC --> _action_markColonColonParam MEMBER_PARAM"
,"MEMBER_DESC --> _action_markPeriodParam MEMBER_PARAM"
,"MEMBER_DESC2 --> _action_markPointerParam MEMBER_PARAM"
,"MEMBER_DESC3 --> _action_markPeriodStarParam MEMBER_PARAM"
,"MEMBER_DESC4 --> _action_markPointerStarParam MEMBER_PARAM"
,"MEMBER_PARAM --> _action_beginStatement _action_addFunction MEMBER_PARAM_DETAIL _action_endStatement"
,"MEMBER_PARAM_DETAIL --> FUNCTION_ID _action_setFunctionId"
,"MEMBER_PARAM_DETAIL --> _action_markParenthesisParam ( STATEMENTS )"
,"MEMBER_PARAM_DETAIL --> _action_markBracketParam [ STATEMENTS ]"
,"MEMBER_PARAM_DETAIL --> _action_markStatement { STATEMENTS }"
,"MEMBER_PARAM_DETAIL --> _action_markExternScript SCRIPT_CONTENT _action_setExternScript"
,"MEMBER_PARAM_DETAIL --> _action_markBracketColonParam BRACKET_COLON_BEGIN STATEMENTS BRACKET_COLON_END"
,"MEMBER_PARAM_DETAIL --> _action_markParenthesisColonParam PARENTHESIS_COLON_BEGIN STATEMENTS PARENTHESIS_COLON_END"
,"MEMBER_PARAM_DETAIL --> _action_markAngleBracketColonParam ANGLE_BRACKET_COLON_BEGIN STATEMENTS ANGLE_BRACKET_COLON_END"
,"MEMBER_PARAM_DETAIL --> _action_markBracePercentParam BRACE_PERCENT_BEGIN STATEMENTS BRACE_PERCENT_END"
,"MEMBER_PARAM_DETAIL --> _action_markBracketPercentParam BRACKET_PERCENT_BEGIN STATEMENTS BRACKET_PERCENT_END"
,"MEMBER_PARAM_DETAIL --> _action_markParenthesisPercentParam PARENTHESIS_PERCENT_BEGIN STATEMENTS PARENTHESIS_PERCENT_END"
,"MEMBER_PARAM_DETAIL --> _action_markAngleBracketPercentParam ANGLE_BRACKET_PERCENT_BEGIN STATEMENTS ANGLE_BRACKET_PERCENT_END"
,"FUNCTION_ID --> IDENTIFIER _action_pushId"
,"FUNCTION_ID --> STRING _action_pushStr"
,"FUNCTION_ID --> NUMBER _action_pushNum"
,"FUNCTION_ID --> DOLLAR_STRING _action_pushDollarStr"
,"SEP --> , _action_pushComma"
,"SEP --> ; _action_pushSemiColon"
,"SEP_STATEMENT_* --> SEP _action_markSeparator STATEMENT SEP_STATEMENT_*"
,"SEP_STATEMENT_* -->"
,"OP_TOKEN_0_OPERATOR_STATEMENT_1_* --> OP_TOKEN_0 _action_pushId _action_buildOperator OPERATOR_STATEMENT_1 OP_TOKEN_0_OPERATOR_STATEMENT_1_*"
,"OP_TOKEN_0_OPERATOR_STATEMENT_1_* -->"
,"OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON_opt --> OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON"
,"OPERATOR_STATEMENT_DESC_ASSIGNMENT_OR_QUESTION_COLON_opt -->"
,"OP_TOKEN_2_OPERATOR_STATEMENT_2_opt --> OP_TOKEN_2 _action_pushId _action_buildOperator OPERATOR_STATEMENT_2"
,"OP_TOKEN_2_OPERATOR_STATEMENT_2_opt -->"
,"OP_TOKEN_COLON_OPERATOR_STATEMENT_COLON_opt --> OP_TOKEN_COLON _action_pushId _action_buildOperator OPERATOR_STATEMENT_COLON"
,"OP_TOKEN_COLON_OPERATOR_STATEMENT_COLON_opt -->"
,"OP_TOKEN_3_OPERATOR_STATEMENT_4_* --> OP_TOKEN_3 _action_pushId _action_buildOperator OPERATOR_STATEMENT_4 OP_TOKEN_3_OPERATOR_STATEMENT_4_*"
,"OP_TOKEN_3_OPERATOR_STATEMENT_4_* -->"
,"OP_TOKEN_4_OPERATOR_STATEMENT_5_* --> OP_TOKEN_4 _action_pushId _action_buildOperator OPERATOR_STATEMENT_5 OP_TOKEN_4_OPERATOR_STATEMENT_5_*"
,"OP_TOKEN_4_OPERATOR_STATEMENT_5_* -->"
,"OP_TOKEN_5_OPERATOR_STATEMENT_6_* --> OP_TOKEN_5 _action_pushId _action_buildOperator OPERATOR_STATEMENT_6 OP_TOKEN_5_OPERATOR_STATEMENT_6_*"
,"OP_TOKEN_5_OPERATOR_STATEMENT_6_* -->"
,"OP_TOKEN_6_OPERATOR_STATEMENT_7_* --> OP_TOKEN_6 _action_pushId _action_buildOperator OPERATOR_STATEMENT_7 OP_TOKEN_6_OPERATOR_STATEMENT_7_*"
,"OP_TOKEN_6_OPERATOR_STATEMENT_7_* -->"
,"OP_TOKEN_7_OPERATOR_STATEMENT_8_* --> OP_TOKEN_7 _action_pushId _action_buildOperator OPERATOR_STATEMENT_8 OP_TOKEN_7_OPERATOR_STATEMENT_8_*"
,"OP_TOKEN_7_OPERATOR_STATEMENT_8_* -->"
,"OP_TOKEN_8_OPERATOR_STATEMENT_9_* --> OP_TOKEN_8 _action_pushId _action_buildOperator OPERATOR_STATEMENT_9 OP_TOKEN_8_OPERATOR_STATEMENT_9_*"
,"OP_TOKEN_8_OPERATOR_STATEMENT_9_* -->"
,"OP_TOKEN_9_OPERATOR_STATEMENT_10_* --> OP_TOKEN_9 _action_pushId _action_buildOperator OPERATOR_STATEMENT_10 OP_TOKEN_9_OPERATOR_STATEMENT_10_*"
,"OP_TOKEN_9_OPERATOR_STATEMENT_10_* -->"
,"OP_TOKEN_10_OPERATOR_STATEMENT_11_* --> OP_TOKEN_10 _action_pushId _action_buildOperator OPERATOR_STATEMENT_11 OP_TOKEN_10_OPERATOR_STATEMENT_11_*"
,"OP_TOKEN_10_OPERATOR_STATEMENT_11_* -->"
,"OP_TOKEN_11_OPERATOR_STATEMENT_12_* --> OP_TOKEN_11 _action_pushId _action_buildOperator OPERATOR_STATEMENT_12 OP_TOKEN_11_OPERATOR_STATEMENT_12_*"
,"OP_TOKEN_11_OPERATOR_STATEMENT_12_* -->"
,"OP_TOKEN_12_OPERATOR_STATEMENT_13_* --> OP_TOKEN_12 _action_pushId _action_buildOperator OPERATOR_STATEMENT_13 OP_TOKEN_12_OPERATOR_STATEMENT_13_*"
,"OP_TOKEN_12_OPERATOR_STATEMENT_13_* -->"
,"OP_TOKEN_13_OPERATOR_STATEMENT_14_* --> OP_TOKEN_13 _action_pushId _action_buildOperator OPERATOR_STATEMENT_14 OP_TOKEN_13_OPERATOR_STATEMENT_14_*"
,"OP_TOKEN_13_OPERATOR_STATEMENT_14_* -->"
,"OP_TOKEN_14_OPERATOR_STATEMENT_14_opt --> OP_TOKEN_14 _action_pushId _action_buildOperator OPERATOR_STATEMENT_14"
,"OP_TOKEN_14_OPERATOR_STATEMENT_14_opt -->"
,"OP_TOKEN_15_FUNCTION_STATEMENT_* --> OP_TOKEN_15 _action_pushId _action_buildOperator FUNCTION_STATEMENT OP_TOKEN_15_FUNCTION_STATEMENT_*"
,"OP_TOKEN_15_FUNCTION_STATEMENT_* -->"
,"FUNCTION_EX_CALL_* --> _action_addFunction FUNCTION_EX_CALL FUNCTION_EX_CALL_*"
,"FUNCTION_EX_CALL_* -->"
,"FUNCTION_EX_CALL_2_* --> _action_addFunction FUNCTION_EX_CALL FUNCTION_EX_CALL_2_*"
,"FUNCTION_EX_CALL_2_* -->"
,"NULLABLE_FUNCTION_PARAMS_opt --> NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_opt -->"
,"NULLABLE_FUNCTION_PARAMS_2_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_2_opt -->"
,"NULLABLE_FUNCTION_PARAMS_3_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_3_opt -->"
,"NULLABLE_FUNCTION_PARAMS_4_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_4_opt -->"
,"NULLABLE_FUNCTION_PARAMS_5_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_5_opt -->"
,"NULLABLE_FUNCTION_PARAMS_6_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_6_opt -->"
,"NULLABLE_FUNCTION_PARAMS_7_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_7_opt -->"
,"NULLABLE_FUNCTION_PARAMS_8_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_8_opt -->"
,"NULLABLE_FUNCTION_PARAMS_9_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_9_opt -->"
,"NULLABLE_FUNCTION_PARAMS_10_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_10_opt -->"
,"NULLABLE_FUNCTION_PARAMS_11_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_11_opt -->"
,"NULLABLE_FUNCTION_PARAMS_12_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_12_opt -->"
,"NULLABLE_FUNCTION_PARAMS_13_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_13_opt -->"
,"NULLABLE_FUNCTION_PARAMS_14_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_14_opt -->"
,"NULLABLE_FUNCTION_PARAMS_15_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_15_opt -->"
,"NULLABLE_FUNCTION_PARAMS_16_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_16_opt -->"
,"NULLABLE_FUNCTION_PARAMS_17_opt --> _action_buildHighOrderFunction NULLABLE_FUNCTION_PARAMS"
,"NULLABLE_FUNCTION_PARAMS_17_opt -->"
};

#define START_SYMBOL 54
#define START_ACTION 144
#define END_ACTION 177
#define GET_NONTERMINAL_NAME(symbol) (Nonterminal_name [symbol - 53])
#define GET_TERMINAL_NAME(symbol) (Terminal_name [symbol])
#define GET_ACTION_NAME(symbol) (Action_name [symbol-(START_ACTION-1)])
#define GET_PRODUCTION_NAME(number) (Production_name [number])

const char *SlkGetSymbolName ( unsigned int   symbol )
{ if ( symbol >= START_ACTION  &&  symbol < END_ACTION ) {
      return ( GET_ACTION_NAME (symbol) );
  } else if ( symbol >= START_SYMBOL ) {
      return ( GET_NONTERMINAL_NAME (symbol) );
  } else if ( symbol > 0 ) {
      return ( GET_TERMINAL_NAME (symbol) );
  } else {
      return ( "not a symbol" );
  }
}

const char *SlkGetProductionName ( unsigned int  production_number )
{
  return ( GET_PRODUCTION_NAME (production_number) );
}

